<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nemustech.platform.lbs.ngms.mapper.VehicleApiMapper">

	<resultMap type="VehicleRegVo" id="vehicle_reg">
		<result property="vehicle_uid" column="vehicle_uid"/>
		<result property="device_uid" column="device_uid" />		
		<result property="device_no" column="device_no" />		
		<result property="is_assigned" column="is_assigned" />
		<result property="vehicle_no" column="vehicle_no" />
		<result property="is_out" column="is_out" />
	</resultMap>
	
	<sql id="vehicleReg_where">
		<where>
			t1.is_used=1
			<if	test=" search_filter > ''">
			<![CDATA[
				and t1.device_no LIKE CONCAT('%', CONCAT(#{search_filter}, '%'))
			]]>
		</if>
		</where>
	</sql>
	
	
	<!--  -->
	<select id="selectUid" resultType="java.lang.String">
		SELECT fn_make_uid() FROM dual
	</select>
	
	
	
	<select id="selectVehicleRegList" parameterType="SearchVo" resultMap="vehicle_reg">
	SELECT * FROM (
	  SELECT ROWNUM - 1 AS rnum, a.* FROM (
		SELECT 
			 t1.device_uid , t1.device_no, t1.is_assigned
			,case is_assigned when 1 then  assigned_vehicle_no else '' end as vehicle_no
			,t1.last_vehicle_uid as vehicle_uid
			,NVL(t2.is_out,1) as is_out 
		FROM 
			tbvc_device t1 left join tbvc_vehicle t2 on t1.last_vehicle_uid = t2.vehicle_uid
		<include refid="vehicleReg_where"/>			
		ORDER BY t1.device_uid DESC
	  ) a
	) WHERE rnum BETWEEN #{limit_offset} AND #{limit_offset} + #{limit_count} - 1
	</select>
	
	<select id="selectVehicleRegListTotalCnt" parameterType="SearchVo" resultType="java.lang.Integer">
		SELECT 
			COUNT(*) 
		FROM
		tbvc_device t1 left join tbvc_vehicle t2 on t1.last_vehicle_uid = t2.vehicle_uid
		<include refid="vehicleReg_where"/>			
			
	</select>
	
	
	<update id="updateVehicleReg" parameterType="VehicleRegVo">
		UPDATE 
			tbvc_device
		SET
			 assigned_vehicle_no = #{vehicle_no}, is_assigned = 1
		WHERE
			device_uid = #{device_uid}	
	</update>
	
	
	<select id="selectVehicleReg" parameterType="VehicleRegVo" resultMap="vehicle_reg">
		SELECT 
			 t1.device_uid , t1.device_no, t1.is_assigned
			,case t1.is_assigned when 1 then  assigned_vehicle_no else '' end as vehicle_no
			,case t1.is_assigned when 1 then NVL(t2.is_out,1) else 1 end is_out
		FROM 
			tbvc_device t1 left join tbvc_vehicle t2 on t1.last_vehicle_uid = t2.vehicle_uid

		WHERE
			t1.device_uid = #{device_uid}
	</select>

		
	<select id="selectVehicleRegCheck" parameterType="VehicleRegVo" resultType="java.lang.Integer">
				
		SELECT 
			 COUNT(*) CNT
		FROM 
			tbvc_device
		WHERE
			is_assigned = 1		
		AND 
			REPLACE(assigned_vehicle_no,' ','') = REPLACE(#{vehicle_no},' ','')	AND  device_uid <![CDATA[ != ]]> #{device_uid}
		
	</select>
	
	<select id="selectVehiclDrivingCheck" parameterType="VehicleRegVo" resultType="java.lang.Integer">
			<!--device_uid 로 운행중인 단말기가 있는지 확인하다. -->
			SELECT 
				COUNT(*) CNT
			FROM 
				tbvc_vehicle
			WHERE
				device_uid = #{device_uid} and is_out = 0 				
	</select>
	
	<!-- 
	<insert id="insertVehicle" useGeneratedKeys="true"  keyProperty="id" parameterType="VehicleRegVo">
		<![CDATA[
			insert into tbvc_vehicle (
				 vehicle_uid
				,device_uid
				,vehicle_no
				,device_no
			 ) values 
		]]>
			(
				 #{vehicle_uid}
				,#{device_uid}
				,#{vehicle_no}
				,#{device_no}
			)
	</insert>
	UPDATE tbvc_vehicle t1 inner join (select * from tbvc_driving_event where vehicle_uid = 1 order by 1 desc ) t2
			on t1.vehicle_uid = t2.vehicle_uid
		SET
			  t1.go_out_date = CURRENT_TIMESTAMP(), t1.is_out = 1
			, t1.last_x= t2.x,  t1.last_y = t2.y , last_latitude= t2.latitude ,  t1.last_longitude = t2.longitude
			, t1.last_speed=speed, t1.last_is_over_speed= t2.is_over_speed , t1.last_on_restrict_area = t2.is_on_restrict_area
					
		WHERE
			t1.vehicle_uid = 1 ; 
	 -->
	<update id="updateVehicleGoOut" parameterType="VehicleRegVo">
	<!-- 운행해제 . -->
		UPDATE 
			tbvc_vehicle
		SET
			go_out_date = CURRENT_TIMESTAMP(), is_out = 1
		WHERE
			vehicle_uid = #{vehicle_uid}	
	</update>
	
	<update id="updateViolationGoOut" parameterType="VehicleRegVo">
	<!-- 운행해제 이 부분은 앱에서 해제될 때 젤 마지막 정보를 넘겨주는게 좋을 것 같음. -->
		UPDATE 
			tbvc_violation_history
		SET
			go_out_date = CURRENT_TIMESTAMP(), app_end_time = ROUND((SYSDATE - TO_DATE('19700101','YYYYMMDD')) * 86400)
		WHERE
			vehicle_uid = #{vehicle_uid}	
			AND go_out_date is null and app_end_time is null
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>