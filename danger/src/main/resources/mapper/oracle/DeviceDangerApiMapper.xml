<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nemustech.platform.lbs.wwms.mapper.DeviceDangerApiMapper">

	<sql id="device_table">
		tbda_device
	</sql>
	
	<sql id="device_table_d">
		<include refid="device_table"/> d
	</sql>

	<sql id="device_column">
	    d.device_uid,
	    d.device_no,
	    d.factory_uid,
	    ( case 
	    when (factory_uid = 0 or factory_uid is null or factory_uid = '') then '인가없음'
	    when factory_uid = 999 then '전공장' 
		else (SELECT f.name FROM tbda_factory f WHERE f.factory_uid = d.factory_uid )
	    end ) AS factory_name,
	    account_name,
	    d.is_used,
	    d.status,
	    ( case when d.network_type = 'totalcompany' then '통합(법인)폰'
	    when d.network_type = 'totalperson' then '통합(개인)폰'
	    else d.network_type end) as network_type,
	    d.is_assigned,
	    TO_CHAR(TO_DATE('19700101','YYYYMMDD') + (d.last_server_access_time / 86400), 'YYYY-MM-DD HH24:MI') AS last_server_access_time,
	    TO_CHAR(d.upd_date, 'YYYY-MM-DD') AS upd_date
	</sql>
	
	<sql id="selectDeviceDangerList_where">
 		<where>
 			is_used=1
<!-- 			<if	test="search_filter != null and search_filter != '' "> -->
<!-- 			<![CDATA[ -->
<!-- 				device_no LIKE CONCAT('%', CONCAT(#{search_filter}, '%')) -->
<!-- 			]]> -->
<!-- 			</if> -->
		</where>
	</sql>
	
	<sql id="selectDeviceDangerList_order">
		<choose>
			<when test="sort_column != null and sort_column != '' and str_order_by != null and str_order_by != ''">
				ORDER BY ${sort_column} ${str_order_by}
			</when>
			<otherwise>
				ORDER BY last_server_access_time desc
			</otherwise>
		</choose>
	</sql>	
	
	<select id="selectDeviceDangerList" parameterType="SearchVo" resultType="DeviceDangerVo">
	SELECT * FROM (
	  SELECT ROWNUM - 1 AS rnum, a.* FROM (
		SELECT
			<include refid="device_column"/>
		FROM
		    <include refid="device_table_d"/>
		<include refid="selectDeviceDangerList_where"/>
		<include refid="selectDeviceDangerList_order"/>
	  ) a
	)
		<if test="limit_count != null and limit_count != ''">
			WHERE rnum BETWEEN #{limit_offset} AND #{limit_offset} + #{limit_count} - 1
		</if>
	</select>
	
	<select id="selectDeviceDangerListTotalCount" parameterType="SearchVo" resultType="java.lang.Integer">
		SELECT
		    count(*)
		FROM
		    <include refid="device_table_d"/>
		<include refid="selectDeviceDangerList_where"/>
	</select>
	
	<select id="selectDeviceDanger" parameterType="DeviceDangerVo" resultType="DeviceDangerCudVo">
		 SELECT 
		    d.device_uid,
		    d.device_no,
		    d.factory_uid,
		    ( case 
				when (factory_uid = 0 or factory_uid is null or factory_uid = '') then '인가없음'
		    	when factory_uid = 999 then '전공장' 
				else (SELECT f.name FROM tbda_factory f WHERE f.factory_uid = d.factory_uid )
		    end ) AS factory_name,
		    account_name,
		    d.is_used,
		    d.status,
		    ( case when d.network_type = 'totalcompany' then '통합(법인)폰'
			    when d.network_type = 'totalperson' then '통합(개인)폰'
			    else d.network_type end) as network_type,
		    (select count(*) from tbda_worker_assigned where device_uid = #{device_uid} and is_completed = 0) as is_assigned,
		    TO_CHAR(TO_DATE('19700101','YYYYMMDD') + (d.last_server_access_time / 86400), 'YYYY-MM-DD HH24:MI') AS last_server_access_time,
		    TO_CHAR(d.upd_date, 'YYYY-MM-DD') AS upd_date
		FROM
		    tbda_device d left outer join tbda_worker w on d.worker_uid = w.worker_uid
		WHERE
			<if test="device_uid != null and device_uid != '' ">
			d.device_uid = #{device_uid}
			</if>
			<if test="device_no != null and device_no != '' ">
		 	d.device_no  = #{device_no}
		 	</if>
	</select>

	<select id="selectCountByDangerDeviceNo"  parameterType="String" resultType="Integer">
		SELECT
			count(*) AS count
		FROM
		    <include refid="device_table"/>
		WHERE
			device_no = #{device_no}
	</select>

	<update id="updateDeviceDanger" parameterType="DeviceDangerCudVo">
		UPDATE
			<include refid="device_table" />
		SET
			upd_date = SYSDATE
			,editor_id = #{creator_id}
			<if test="reg_device_no != null and reg_device_no != '' ">
			,device_no = #{device_no}
			</if>
			<if test="reg_date != null and reg_date != '' ">
			,reg_date = #{reg_date}
			</if>
			<if test="factory_uid != null and factory_uid != '' ">
			,factory_uid = #{factory_uid}
			</if>
			<!-- <if test="status != null and status != '' "> -->
			,status = #{status}
			<!-- </if> -->
			,is_used = 1
			,account_name = #{account_name}
			<if test="network_type != null and network_type != '' ">
			,network_type = #{network_type}
			</if>
		WHERE
			device_uid = #{device_uid}	
	</update>
	
	<insert id="insertDeviceDanger" parameterType="DeviceDangerCudVo">
		INSERT INTO <include refid="device_table"/>
		(
			device_uid
			,device_no
			,factory_uid
			,account_name
			,is_used
			,status
			,creator_id
			,reg_date
			,network_type
			,is_company
		)
		VALUES
		(
			fn_make_uid()
			,#{device_no}
			,#{factory_uid}
			,#{account_name}
			,1
			,1
			,#{creator_id}
			,#{reg_date}
			,#{network_type}
			,#{is_company}
		)
	</insert>
	
	<insert id="insertDeviceDangerWorker" parameterType="DeviceDangerCudVo">
		INSERT INTO <include refid="device_table"/>
		(
			device_uid
			,device_no
			,factory_uid
			,account_name
			,is_used
			,status
			,creator_id
			,reg_date
			,network_type
			,is_company
			,worker_uid
			,last_server_access_time 
		)
		VALUES
		(
			fn_make_uid()
			,#{device_no}
			,0
			,#{account_name}
			,1
			,1
			,#{account_name}
			,SYSDATE
			,#{network_type}
			,0
			,#{worker_uid}
			,ROUND((SYSDATE - TO_DATE('19700101','YYYYMMDD')) * 86400)
		)
	</insert>

	<delete id="deleteDeviceDangerByUid2" parameterType="DeviceDangerCudVo">
		DELETE FROM <include refid="device_table"/>
		WHERE
			device_uid = #{device_uid}
	</delete>
	
	<update id="deleteDeviceDangerByUid" parameterType="DeviceDangerCudVo">
		UPDATE 
			<include refid="device_table"/>
		SET
			upd_date = SYSDATE
			,is_used = 0
		WHERE
			device_uid = #{device_uid}	
	</update>
	

	<sql id="device_password_table">
		tbcm_device_conf
	</sql>
	
	<select id="selectDevicePasswordDanger" resultType="String">
	SELECT * FROM (
		SELECT
			password
		FROM
		    <include refid="device_password_table"/>
<![CDATA[
	) WHERE ROWNUM <= 1
]]>
	</select>
	
	<update id="updateDevicePasswordDanger" parameterType="DeviceDangerPasswordVo">
		UPDATE 
			<include refid="device_password_table"/>
		SET
			password   = #{new_password}
			,editor_id = #{editor_id}
			,upd_date  = SYSDATE
	</update>
	
	<!-- [개인폰] -->
	<select id="selectDeviceDangerByDeviceNo" parameterType="String" resultType="DeviceDangerCudVo">
		SELECT
			device_uid
			,device_no
		    ,factory_uid
			,account_name
		    ,d.is_used
		    ,d.is_assigned
		    ,d.status
		    ,TO_CHAR(TO_DATE('19700101','YYYYMMDD') + (d.last_server_access_time / 86400), 'YYYY-MM-DD HH24:MI') as upd_date
		    ,d.network_type
		    ,d.is_company
		FROM
		    <include refid="device_table_d"/>
		WHERE
		 	device_no  = #{device_no}		 
	</select>

	<!-- 160901 신규 작업자인 경우, 혹시 기존 작업 종료 않된것이 있으면 강제 작업종료 -->
	<update id="updatePersonDevice" parameterType="AppWorkerRegEventVo">
		UPDATE tbda_device
		SET
			 is_company        = 0
			,network_type      = #{device_network_type}
			,factory_uid       = 0
			,worker_uid        = #{worker_uid}
			,account_name      = #{worker_name}
			,is_used           = 1
			,is_assigned       = 1
			,is_alive_report   = 2
			,last_work_uid     = null
			,alive_report_date = null
			,last_server_access_time = ROUND((SYSDATE - TO_DATE('19700101','YYYYMMDD')) * 86400)
		WHERE device_no  = #{device_no}	
	</update>
	
	<!-- 160901 신규 작업자인 경우, 혹시 기존 작업 종료 않된것이 있으면 강제 작업종료 -->
	<update id="updateNewWorkerAssignedDeviceRelease" parameterType="String">		
		UPDATE 
			tbda_worker_assigned
		SET
			 is_completed  = 1
			,complete_date = SYSDATE
		WHERE
			device_no = #{device_no}
		AND is_completed in (0,2)
	</update>

	<!-- // 150901 신규 단말 등록시, 해당 번호의 작업 종료가 남아 있으면 강제 종료 -->
	<update id="updateNewWorkerNWorkUnReg" parameterType="String">		
		UPDATE 
			tbda_work
		SET
			is_completed = 1
		WHERE
			device_no = #{device_no}
		AND is_completed = 0
	</update>	
</mapper>