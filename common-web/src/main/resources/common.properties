###############################################################################
# Thread Pool
###############################################################################
# The minimum number of threads to keep in the pool, even if they are idle. (Default value is 10)
# 쓰레드 풀의 최소 크기(초과시 이 갯수만큼 계속 증가)
thread.pool.min_size = 20

# The maximum number of threads to allow in the pool. (Default value is 100)
# 쓰레드 풀의 최대 크기(초과시 다음 작업은 대기)
thread.pool.max_size = 200

# When the number in seconds of threads is greater than the minimum,
# this is the maximum time that excess idle threads will wait for new tasks before terminating. (Default value is 60)
# 쓰레드가 사용되지 않더라도 다음 작업을 위해 유지하는 최대 시간(초)
thread.pool.keep_alive_time = 60

###############################################################################
# HTTP Connector Pool
###############################################################################
# Increase default max connection per route to n. (Default value is 2)
# 커넥션 풀을 사용할 때 요청 경로마다 동시 커넥션 숫자
http.connection.pool.max_per_route = 100

# Increase max total connection to n. (Default value is 20)
# 커넥션 풀의 최대 갯수
http.connection.pool.max_total = 200

# The timeout in milliseconds until a connection is established.
# A value of zero means the timeout is not used.
# 커넥션이 성공할때까지 대기하는 시간(밀리초)
http.connection.timeout = 2000

# The default socket timeout (SO_TIMEOUT) in milliseconds which is the timeout for waiting for data.
# A timeout value of zero is interpreted as an infinite timeout.
# This value is used when no socket timeout is set in the HTTP method parameters.
# 응답 결과를 받을때까지 대기하는 시간(밀리초)
http.socket.timeout = 600000

###############################################################################
# Log
###############################################################################
# LogUtil 사용시 로그를 파일에 기록 (Default value is false)
#log.file.enable = true